global:
  kafka:
    name: &kafka kafka
    namespace: &kafkanamespace kafka
    kafka-cluster: &kafkacluster
      bootstrapServer: kafka-kafka-bootstrap.kafka.svc.cluster.local:9092
      securityProtocol: SASL_PLAINTEXT
      saslMechanism: SCRAM-SHA-512
      clientId: globex
      clientSecret: globex

amqstreams:
  applicationName: amqstreams
  applicationNamespace: openshift-gitops
  destinationNamespace: kafka
  source:
    repoUrl: https://github.com/jayachristina/globex-ai-poc-helm.git
    targetRevision: strimzi
    path: amq-streams
    helm:
      values:
        kafka:
          enabled: true
        console:
          enabled: true

        kafka-broker:
          namespace: *kafkanamespace
          nameOverride: *kafka
          kafka:
            controller:
              enabled: true
            listener:
              external:
                tls:
                  secret:
                    value:
                      crt: 
                      key: 
          authentication:
            clientId: admin
            clientSecret: adminpassword
            securityProtocol: SASL_PLAINTEXT
            saslMechanism: SCRAM-SHA-512
        amq-streams-console:
          namespace: *kafkanamespace
          subdomain: 
          kafka:
            name: *kafka
            namespace: *kafkanamespace
            authentication:
              securityProtocol: SASL_SSL
              saslMechanism: SCRAM-SHA-512
            authorization: simple
        kafka-topics:
          kafka:
            namespace: *kafkanamespace
            cluster: *kafka
  argocd:
    enabled: true
    syncwave: "1"

keycloak:
  applicationName: keycloak
  applicationNamespace: openshift-gitops
  destinationNamespace: keycloak
  source:
    repoUrl: https://github.com/jayachristina/globex-ai-poc-helm.git
    targetRevision: strimzi
    path: keycloak
    helm:
      values:
        keycloak:
          nameOverride: keycloak
          route:
            host:
          ingress:
            enabled: false
  argocd:
    enabled: true
    syncwave: "1"

mongodb:
  applicationName: mongodb
  applicationNamespace: openshift-gitops
  destinationNamespace: mongodb
  source:
    repoUrl: https://charts.bitnami.com/bitnami
    chart: mongodb
    targetRevision: 16.5.44
    helm:
      values:
        global:
          security:
            allowInsecureImages: true
          compatibility:
            openshift:
              adaptSecurityContext: force
            omitEmptySeLinuxOption: true
        architecture: standalone
        image:
          registry: quay.io
          repository: btison/mongodb
          tag: 8.0.12-debian-12-r2
        podSecurityContext:
          enabled: false
          fsGroup: ""
        auth:
          rootPassword:
          usernames:
            - globex
          passwords:
            - globex
          databases:
            - reviews
  argocd:
    enabled: true
    syncwave: "1"

mailserver:
  applicationName: mail-server
  applicationNamespace: openshift-gitops
  destinationNamespace: mail-server
  source:
    repoUrl: https://github.com/jayachristina/globex-ai-poc-helm.git
    targetRevision: strimzi
    path: mail-server
  argocd:
    enabled: true
    syncwave: "1"

globexai:
  applicationName: globex-ai
  applicationNamespace: openshift-gitops
  destinationNamespace: globex-ai
  source:
    repoUrl: https://github.com/jayachristina/globex-ai-poc-helm.git
    targetRevision: strimzi
    path: globex-ai
    helm:
      values:
        kafka-broker:
          namespace: *kafkanamespace
          nameOverride: *kafka

        kafka-topics:
          kafka:
            namespace: *kafkanamespace
            cluster: *kafka
        globex-db:
          pgsql:
            adminPassword: adminpassword
        mail-mcp:
          route:
            enabled: true
          mailserver:
            host: mail-server.mail-server.svc.cluster.local
          oidc:
            enabled: true
            authServer: 
            realm: mcp
            clientId: mcp-client
            audience: mcp

        review-processor:
          kafka:
            <<: *kafkacluster

          llm:
            moderation:
              modelName:
              apiKey:
              baseUrl:
            emailWriter:
              modelName:
              apiKey:
              baseUrl:
            sentiment:
              modelName:
              apiKey:
              baseUrl:

          mcp:
            mail:
              url: http://mail-mcp.globex-ai.svc.cluster.local:8080/mcp
          
          customerAPI:
            url: http://globex-store-app.globex-ai.svc.cluster.local:8080

          mongodb:
            connectionString: mongodb://mongodb.mongodb.svc.cluster.local:27017
            database: reviews
            collection: reviews
            username: globex
            password: globex

          oidc:
            authServer: 
            realm: mcp
            clientId: mcp-client
            clientSecret:
            scopes: mcp-audience

        review-summarizer:
          kafka:
            <<: *kafkacluster

          mongodb:
            connectionString: mongodb://mongodb.mongodb.svc.cluster.local:27017
            database: reviews
            username: globex
            password: globex
            collection:
              reviews: reviews
              summary: summary

          llm:
            summary:
              modelName:
              apiKey:
              baseUrl:

        keycloak-realmimport-mcp:
          namespace: keycloak
          keycloak:
            name: keycloak
          realm:
            name: mcp
          client:
            mcp:
              name: mcp-client
              secret:

        keycloak-realmimport-globex:
          namespace: keycloak
          keycloak:
            name: keycloak
          realm:
            name: globex
          client:
            gateway: globex-web-gateway

        review-service:
          kafka:
            <<: *kafkacluster
          mongodb:
            connectionString: mongodb://mongodb.mongodb.svc.cluster.local:27017
            database: reviews
            username: globex
            password: globex
            collection:
              reviews: reviews
              summary: summary

        globex-web:
          sso:
            authServer:
            realm: globex
            client: globex-web-gateway
          subdomain:

        activity-tracking:
          kafka:
            <<: *kafkacluster

        recommendation-engine:
          kafka:
            <<: *kafkacluster

  argocd:
    enabled: true
    syncwave: "2"